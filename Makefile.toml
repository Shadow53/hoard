[tasks.clean-all]
    script = """
    cargo clean
    rm -rf profraw
    """

[tasks.install-nightly]
    ignore_errors = true
    command = "rustup"
    args = ["toolchain", "install", "nightly", "--component", "llvm-tools-preview", "--target", "x86_64-unknown-linux-musl"]

[tasks.build-nightly]
    install_crate = false
    dependencies = ["install-nightly"]
    command = "cargo"
    args = ["+nightly", "build", "--target", "x86_64-unknown-linux-musl"]

[tasks.test-nightly]
    install_crate = false
    dependencies = ["install-nightly"]
    command = "cargo"
    args = ["+nightly", "test", "--target", "x86_64-unknown-linux-musl"]
    [tasks.test-nightly.env]
        RUSTFLAGS="-Zinstrument-coverage"
        LLVM_PROFILE_FILE="profraw/hoard-test-%p-%m.profraw"

[tasks.integration-tests]
    dependencies = ["build-nightly"]
    script = """
    mkdir -p ./profraw
    sudo docker image build . -t hoard-tests
    echo "Running tests"
    sudo docker container run --rm -v $(pwd)/profraw:/hoard-tests/profraw:Z hoard-tests
    echo "Ran tests"
    """

[tasks.grcov]
    dependencies = ["clean-all", "test-nightly", "integration-tests"]
    # Using `script` is necessary to get the glob expansion
    script = """
    grcov profraw/*.profraw --binary-path ./target/x86_64-unknown-linux-musl/debug \
        -s . -t html --branch --ignore-not-existing -o ./target/debug/coverage \
        --excl-br-line "(#\\[derive\\(|grcov: ignore|tracing::(error|warn|info|debug|trace)(_span)?)" \
        --excl-line "(#\\[derive\\(|grcov: ignore|tracing::(error|warn|info|debug|trace)(_span)?)"
    """
    [tasks.grcov.env]
        RUSTFLAGS="-Zinstrument-coverage"
        LLVM_PROFILE_FILE="default.profraw"
        RUSTUP_TOOLCHAIN="nightly"
        HOARD_LOG="trace"

[tasks.view-grcov]
    dependencies = ["grcov"]
    command = "xdg-open"
    args = ["./target/debug/coverage/index.html"]
